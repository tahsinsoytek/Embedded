CCS PCM C Compiler, Version 5.015, 5967               02-Aðu-21 17:07

               Filename:   D:\Masaüstü\Embedded Systems(Gömülü Sistemler)\Projeler\Proje 8(Saniye Sayacý)\main.lst

               ROM used:   164 words (2%)
                           Largest free fragment is 2048
               RAM used:   14 (4%) at main() level
                           27 (7%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   033
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
....................  
....................  
....................  
....................  
.................... #INT_RTCC 
.................... void  timer0_interrupt(void)  
.................... { 
....................  
....................  
002F:  BCF    0B.2
0030:  BCF    0A.3
0031:  BCF    0A.4
0032:  GOTO   01B
.................... } 
....................  
.................... void main() 
0033:  MOVF   03,W
0034:  ANDLW  1F
0035:  MOVWF  03
0036:  MOVLW  FF
0037:  MOVWF  27
0038:  BSF    03.5
0039:  BSF    1F.0
003A:  BSF    1F.1
003B:  BSF    1F.2
003C:  BCF    1F.3
003D:  MOVLW  07
003E:  MOVWF  1C
003F:  BCF    03.7
.................... { 
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_8|RTCC_8_bit);       
0040:  MOVF   01,W
0041:  ANDLW  C0
0042:  IORLW  02
0043:  MOVWF  01
....................     
....................    set_tris_c(0x00); 
0044:  MOVLW  00
0045:  MOVWF  07
0046:  BCF    03.5
0047:  MOVWF  27
....................    int mnts[6]={0b00000000,0b00010000,0b00100000,0b00110000,0b01000000,0b01010000}; 
0048:  CLRF   28
0049:  MOVLW  10
004A:  MOVWF  29
004B:  MOVLW  20
004C:  MOVWF  2A
004D:  MOVLW  30
004E:  MOVWF  2B
004F:  MOVLW  40
0050:  MOVWF  2C
0051:  MOVLW  50
0052:  MOVWF  2D
....................    enable_interrupts(INT_RTCC); 
0053:  BSF    0B.5
....................    enable_interrupts(GLOBAL); 
0054:  MOVLW  C0
0055:  IORWF  0B,F
....................    int x,y,z; 
....................    int32 ctr=0; 
0056:  CLRF   34
0057:  CLRF   33
0058:  CLRF   32
0059:  CLRF   31
....................    x=0; 
005A:  CLRF   2E
....................    output_c(0x00); 
005B:  MOVLW  00
005C:  MOVWF  27
005D:  BSF    03.5
005E:  CLRF   07
005F:  BCF    03.5
0060:  CLRF   07
....................    while(TRUE) 
....................    { 
....................       for(y=0;y<6;) 
0061:  CLRF   2F
0062:  MOVF   2F,W
0063:  SUBLW  05
0064:  BTFSS  03.0
0065:  GOTO   0A2
....................       { 
....................          while(ctr!=825) 
0066:  MOVF   31,W
0067:  SUBLW  39
0068:  BTFSS  03.2
0069:  GOTO   074
006A:  MOVF   32,W
006B:  SUBLW  03
006C:  BTFSS  03.2
006D:  GOTO   074
006E:  MOVF   33,F
006F:  BTFSS  03.2
0070:  GOTO   074
0071:  MOVF   34,F
0072:  BTFSC  03.2
0073:  GOTO   081
....................          { 
....................             if(get_timer0()==255) 
0074:  MOVF   01,W
0075:  SUBLW  FF
0076:  BTFSS  03.2
0077:  GOTO   080
....................             { 
....................                ctr++; 
0078:  MOVLW  01
0079:  ADDWF  31,F
007A:  BTFSC  03.0
007B:  INCF   32,F
007C:  BTFSC  03.2
007D:  INCF   33,F
007E:  BTFSC  03.2
007F:  INCF   34,F
....................             } 
0080:  GOTO   066
....................          } 
....................          x++; 
0081:  INCF   2E,F
....................          if(x==10) 
0082:  MOVF   2E,W
0083:  SUBLW  0A
0084:  BTFSS  03.2
0085:  GOTO   08F
....................          { 
....................             output_c(x); 
0086:  MOVLW  00
0087:  MOVWF  27
0088:  BSF    03.5
0089:  CLRF   07
008A:  BCF    03.5
008B:  MOVF   2E,W
008C:  MOVWF  07
....................             x=0; 
008D:  CLRF   2E
....................             y++; 
008E:  INCF   2F,F
....................          } 
....................          ctr=0; 
008F:  CLRF   34
0090:  CLRF   33
0091:  CLRF   32
0092:  CLRF   31
....................          z=mnts[y]|x; 
0093:  MOVLW  28
0094:  ADDWF  2F,W
0095:  MOVWF  04
0096:  BCF    03.7
0097:  MOVF   00,W
0098:  IORWF  2E,W
0099:  MOVWF  30
....................          output_c(z); 
009A:  MOVLW  00
009B:  MOVWF  27
009C:  BSF    03.5
009D:  CLRF   07
009E:  BCF    03.5
009F:  MOVF   30,W
00A0:  MOVWF  07
00A1:  GOTO   062
....................           
....................        } 
00A2:  GOTO   061
....................     } 
....................        
....................    } 
....................  
00A3:  SLEEP
....................  

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
