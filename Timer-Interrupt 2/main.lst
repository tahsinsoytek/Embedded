CCS PCM C Compiler, Version 5.015, 5967               29-Tem-21 18:55

               Filename:   D:\Masaüstü\Embedded Systems(Gömülü Sistemler)\Projeler\Proje 7(Timer-Interrupt 2)\main.lst

               ROM used:   133 words (2%)
                           Largest free fragment is 2048
               RAM used:   13 (4%) at main() level
                           14 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   040
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   032
001B:  MOVLW  8C
001C:  MOVWF  04
001D:  BTFSS  00.0
001E:  GOTO   021
001F:  BTFSC  0C.0
0020:  GOTO   035
0021:  MOVF   22,W
0022:  MOVWF  04
0023:  MOVF   23,W
0024:  MOVWF  77
0025:  MOVF   24,W
0026:  MOVWF  78
0027:  MOVF   25,W
0028:  MOVWF  79
0029:  MOVF   26,W
002A:  MOVWF  7A
002B:  MOVF   20,W
002C:  MOVWF  0A
002D:  SWAPF  21,W
002E:  MOVWF  03
002F:  SWAPF  7F,F
0030:  SWAPF  7F,W
0031:  RETFIE
0032:  BCF    0A.3
0033:  BCF    0A.4
0034:  GOTO   038
0035:  BCF    0A.3
0036:  BCF    0A.4
0037:  GOTO   03C
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
....................  
....................  
....................  
.................... #INT_RTCC 
.................... void  RTCC_isr(void)  
.................... { 
....................  
.................... } 
....................  
0038:  BCF    0B.2
0039:  BCF    0A.3
003A:  BCF    0A.4
003B:  GOTO   021
.................... #INT_TIMER1 
.................... void  TIMER1_isr(void)  
.................... { 
....................  
003C:  BCF    0C.0
003D:  BCF    0A.3
003E:  BCF    0A.4
003F:  GOTO   021
.................... } 
....................  
.................... void main() 
0040:  MOVF   03,W
0041:  ANDLW  1F
0042:  MOVWF  03
0043:  MOVLW  FF
0044:  MOVWF  27
0045:  BSF    03.5
0046:  BSF    1F.0
0047:  BSF    1F.1
0048:  BSF    1F.2
0049:  BCF    1F.3
004A:  MOVLW  07
004B:  MOVWF  1C
004C:  BCF    03.7
.................... { 
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1|RTCC_8_bit);      //51,2 us overflow 
004D:  MOVF   01,W
004E:  ANDLW  C7
004F:  IORLW  08
0050:  MOVWF  01
....................     
....................     
....................    setup_timer_1(T1_INTERNAL|T1_DIV_BY_8); 
0051:  MOVLW  B5
0052:  BCF    03.5
0053:  MOVWF  10
....................     
....................    int sayac; 
....................     
....................    enable_interrupts(INT_RTCC); 
0054:  BSF    0B.5
....................    enable_interrupts(INT_TIMER1); 
0055:  BSF    03.5
0056:  BSF    0C.0
....................    enable_interrupts(GLOBAL); 
0057:  MOVLW  C0
0058:  BCF    03.5
0059:  IORWF  0B,F
....................     
....................  
....................  
....................    while(TRUE) 
....................    { 
....................       if(input(pin_b2)) 
005A:  BSF    03.5
005B:  BSF    06.2
005C:  BCF    03.5
005D:  BTFSS  06.2
005E:  GOTO   075
....................       { 
....................          sayac=get_timer1(); 
005F:  MOVF   0F,W
0060:  MOVWF  7A
0061:  MOVF   0E,W
0062:  MOVWF  77
0063:  MOVF   0F,W
0064:  SUBWF  7A,W
0065:  BTFSS  03.2
0066:  GOTO   05F
0067:  MOVF   77,W
0068:  MOVWF  28
....................           
....................          output_c(sayac); 
0069:  MOVLW  00
006A:  MOVWF  27
006B:  BSF    03.5
006C:  CLRF   07
006D:  BCF    03.5
006E:  MOVF   28,W
006F:  MOVWF  07
....................  
....................          while(input(pin_b2)); 
0070:  BSF    03.5
0071:  BSF    06.2
0072:  BCF    03.5
0073:  BTFSC  06.2
0074:  GOTO   070
....................       } 
....................       if(input(pin_b3)) 
0075:  BSF    03.5
0076:  BSF    06.3
0077:  BCF    03.5
0078:  BTFSS  06.3
0079:  GOTO   083
....................       { 
....................        
....................          set_timer1(125); 
007A:  CLRF   0E
007B:  CLRF   0F
007C:  MOVLW  7D
007D:  MOVWF  0E
....................           
....................          while(input(pin_b3)); 
007E:  BSF    03.5
007F:  BSF    06.3
0080:  BCF    03.5
0081:  BTFSC  06.3
0082:  GOTO   07E
....................       } 
0083:  GOTO   05A
....................    } 
....................  
.................... } 
0084:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
