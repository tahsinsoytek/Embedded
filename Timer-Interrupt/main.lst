CCS PCM C Compiler, Version 5.015, 5967               29-Tem-21 17:24

               Filename:   D:\Masaüstü\Embedded Systems(Gömülü Sistemler)\Projeler\Proje 6(Timer-Interrupt)\main.lst

               ROM used:   118 words (1%)
                           Largest free fragment is 2048
               RAM used:   12 (3%) at main() level
                           12 (3%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   05A
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   036
001B:  BTFSS  0B.4
001C:  GOTO   01F
001D:  BTFSC  0B.1
001E:  GOTO   039
001F:  MOVLW  8C
0020:  MOVWF  04
0021:  BTFSS  00.0
0022:  GOTO   025
0023:  BTFSC  0C.0
0024:  GOTO   03C
0025:  MOVF   22,W
0026:  MOVWF  04
0027:  MOVF   23,W
0028:  MOVWF  77
0029:  MOVF   24,W
002A:  MOVWF  78
002B:  MOVF   25,W
002C:  MOVWF  79
002D:  MOVF   26,W
002E:  MOVWF  7A
002F:  MOVF   20,W
0030:  MOVWF  0A
0031:  SWAPF  21,W
0032:  MOVWF  03
0033:  SWAPF  7F,F
0034:  SWAPF  7F,W
0035:  RETFIE
0036:  BCF    0A.3
0037:  BCF    0A.4
0038:  GOTO   048
0039:  BCF    0A.3
003A:  BCF    0A.4
003B:  GOTO   03F
003C:  BCF    0A.3
003D:  BCF    0A.4
003E:  GOTO   051
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
....................  
....................  
....................  
.................... #int_ext 
.................... void extint() 
.................... { 
....................    output_toggle(pin_a0); 
003F:  BSF    03.5
0040:  BCF    05.0
0041:  MOVLW  01
0042:  BCF    03.5
0043:  XORWF  05,F
.................... } 
....................  
....................  
0044:  BCF    0B.1
0045:  BCF    0A.3
0046:  BCF    0A.4
0047:  GOTO   025
.................... #int_rtcc 
.................... void timer0int() 
.................... { 
....................    output_toggle(pin_a0); 
0048:  BSF    03.5
0049:  BCF    05.0
004A:  MOVLW  01
004B:  BCF    03.5
004C:  XORWF  05,F
....................  
.................... } 
....................  
004D:  BCF    0B.2
004E:  BCF    0A.3
004F:  BCF    0A.4
0050:  GOTO   025
.................... #INT_TIMER1 
....................  
.................... void timer1_isr() 
.................... { 
....................    output_toggle(pin_a0); 
0051:  BSF    03.5
0052:  BCF    05.0
0053:  MOVLW  01
0054:  BCF    03.5
0055:  XORWF  05,F
0056:  BCF    0C.0
0057:  BCF    0A.3
0058:  BCF    0A.4
0059:  GOTO   025
.................... } 
....................  
....................  
.................... void main() 
005A:  MOVF   03,W
005B:  ANDLW  1F
005C:  MOVWF  03
005D:  BSF    03.5
005E:  BSF    1F.0
005F:  BSF    1F.1
0060:  BSF    1F.2
0061:  BCF    1F.3
0062:  MOVLW  07
0063:  MOVWF  1C
0064:  BCF    03.7
.................... { 
....................    setup_timer_0 (RTCC_DIV_256); 
0065:  MOVF   01,W
0066:  ANDLW  C0
0067:  IORLW  07
0068:  MOVWF  01
....................     
....................    setup_timer_1 (T1_EXTERNAL|T1_DIV_BY_1); 
0069:  MOVLW  87
006A:  BCF    03.5
006B:  MOVWF  10
....................     
....................    enable_interrupts(GLOBAL); 
006C:  MOVLW  C0
006D:  IORWF  0B,F
....................    enable_interrupts(INT_rtcc); 
006E:  BSF    0B.5
....................    enable_interrupts(INT_ext); 
006F:  BSF    0B.4
....................     
....................    enable_interrupts(INT_TIMER1); 
0070:  BSF    03.5
0071:  BSF    0C.0
....................     
....................    set_tris_a(0x00); 
0072:  MOVLW  00
0073:  MOVWF  05
....................  
....................  
....................    while(TRUE) 
....................    { 
0074:  GOTO   074
....................       //TODO: User Code 
....................    } 
....................  
.................... } 
0075:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
