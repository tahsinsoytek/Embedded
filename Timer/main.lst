CCS PCM C Compiler, Version 5.015, 5967               27-Tem-21 18:29

               Filename:   D:\Masaüstü\Embedded Systems(Gömülü Sistemler)\Projeler\Proje 5(Timer)\main.lst

               ROM used:   179 words (2%)
                           Largest free fragment is 2048
               RAM used:   21 (6%) at main() level
                           25 (7%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   04C
0003:  NOP
.................... #include <main.h> 
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(crystal=20000000) 
.................... #use timer(timer=0,tick=100us,bits=32,NOISR) 
0004:  BTFSS  0B.2
0005:  GOTO   010
0006:  MOVLW  01
0007:  ADDWF  20,F
0008:  BTFSC  03.0
0009:  INCF   21,F
000A:  BTFSC  03.2
000B:  INCF   22,F
000C:  BTFSC  03.2
000D:  INCF   23,F
000E:  BCF    0B.2
000F:  GOTO   01C
0010:  MOVF   01,W
0011:  BTFSS  0B.2
0012:  GOTO   01D
0013:  MOVLW  01
0014:  ADDWF  20,F
0015:  BTFSC  03.0
0016:  INCF   21,F
0017:  BTFSC  03.2
0018:  INCF   22,F
0019:  BTFSC  03.2
001A:  INCF   23,F
001B:  BCF    0B.2
001C:  MOVF   01,W
001D:  MOVWF  77
001E:  MOVF   20,W
001F:  MOVWF  78
0020:  MOVF   21,W
0021:  MOVWF  79
0022:  MOVF   22,W
0023:  MOVWF  7A
0024:  MOVF   23,W
0025:  MOVWF  2C
0026:  RRF    2C,F
0027:  RRF    7A,F
0028:  RRF    79,F
0029:  RRF    78,F
002A:  RRF    77,F
002B:  RETURN
....................  
.................... #define TICK_TYPE unsigned int32 
.................... #define TICKS_PER_SECOND 10000 
....................  
....................  
.................... TICK_TYPE GetTickDifference(TICK_TYPE currTick, TICK_TYPE prevTick) 
.................... { 
....................    return(currTick-prevTick); 
002C:  MOVF   30,W
002D:  SUBWF  2C,W
002E:  MOVWF  77
002F:  MOVF   2D,W
0030:  MOVWF  78
0031:  MOVF   31,W
0032:  BTFSS  03.0
0033:  INCFSZ 31,W
0034:  SUBWF  78,F
0035:  MOVF   2E,W
0036:  MOVWF  79
0037:  MOVF   32,W
0038:  BTFSS  03.0
0039:  INCFSZ 32,W
003A:  SUBWF  79,F
003B:  MOVF   2F,W
003C:  MOVWF  7A
003D:  MOVF   33,W
003E:  BTFSS  03.0
003F:  INCFSZ 33,W
0040:  SUBWF  7A,F
0041:  BCF    0A.3
0042:  BCF    0A.4
0043:  GOTO   08F (RETURN)
.................... } 
....................  
.................... void timerint(void) 
.................... { 
....................    output_toggle(pin_b1); 
0044:  BSF    03.5
0045:  BCF    06.1
0046:  MOVLW  02
0047:  BCF    03.5
0048:  XORWF  06,F
0049:  BCF    0A.3
004A:  BCF    0A.4
004B:  GOTO   0A9 (RETURN)
.................... } 
....................  
.................... void main() 
004C:  MOVF   03,W
004D:  ANDLW  1F
004E:  MOVWF  03
004F:  CLRF   23
0050:  CLRF   22
0051:  CLRF   21
0052:  CLRF   20
0053:  BSF    03.5
0054:  MOVF   01,W
0055:  ANDLW  C0
0056:  IORLW  07
0057:  MOVWF  01
0058:  BCF    03.5
0059:  CLRF   01
005A:  BCF    0B.2
005B:  BSF    03.5
005C:  BSF    1F.0
005D:  BSF    1F.1
005E:  BSF    1F.2
005F:  BCF    1F.3
0060:  MOVLW  07
0061:  MOVWF  1C
0062:  BCF    03.7
.................... { 
....................    TICK_TYPE CurrentTick,PreviousTick; 
....................  
....................  
....................    //Example program using Tick Timer 
....................    CurrentTick = PreviousTick = get_ticks(); 
0063:  BCF    03.5
0064:  CALL   004
0065:  MOVF   7A,W
0066:  MOVWF  2B
0067:  MOVF   79,W
0068:  MOVWF  2A
0069:  MOVF   78,W
006A:  MOVWF  29
006B:  MOVF   77,W
006C:  MOVWF  28
006D:  MOVF   2B,W
006E:  MOVWF  27
006F:  MOVF   2A,W
0070:  MOVWF  26
0071:  MOVF   29,W
0072:  MOVWF  25
0073:  MOVF   28,W
0074:  MOVWF  24
....................  
....................    while(TRUE) 
....................    { 
....................       CurrentTick = get_ticks(); 
0075:  CALL   004
0076:  MOVF   7A,W
0077:  MOVWF  27
0078:  MOVF   79,W
0079:  MOVWF  26
007A:  MOVF   78,W
007B:  MOVWF  25
007C:  MOVF   77,W
007D:  MOVWF  24
....................  
....................       if(GetTickDifference(CurrentTick, PreviousTick) >= (TICK_TYPE)TICKS_PER_SECOND) 
007E:  MOVF   27,W
007F:  MOVWF  2F
0080:  MOVF   26,W
0081:  MOVWF  2E
0082:  MOVF   25,W
0083:  MOVWF  2D
0084:  MOVF   24,W
0085:  MOVWF  2C
0086:  MOVF   2B,W
0087:  MOVWF  33
0088:  MOVF   2A,W
0089:  MOVWF  32
008A:  MOVF   29,W
008B:  MOVWF  31
008C:  MOVF   28,W
008D:  MOVWF  30
008E:  GOTO   02C
008F:  MOVF   7A,W
0090:  MOVWF  2F
0091:  MOVF   79,W
0092:  MOVWF  2E
0093:  MOVF   78,W
0094:  MOVWF  2D
0095:  MOVF   77,W
0096:  MOVWF  2C
0097:  MOVF   2F,F
0098:  BTFSS  03.2
0099:  GOTO   0A8
009A:  MOVF   2E,F
009B:  BTFSS  03.2
009C:  GOTO   0A8
009D:  MOVF   2D,W
009E:  SUBLW  26
009F:  BTFSC  03.0
00A0:  GOTO   0B1
00A1:  XORLW  FF
00A2:  BTFSS  03.2
00A3:  GOTO   0A8
00A4:  MOVF   2C,W
00A5:  SUBLW  0F
00A6:  BTFSC  03.0
00A7:  GOTO   0B1
....................       { 
....................          timerint(); 
00A8:  GOTO   044
....................          PreviousTick = CurrentTick; 
00A9:  MOVF   27,W
00AA:  MOVWF  2B
00AB:  MOVF   26,W
00AC:  MOVWF  2A
00AD:  MOVF   25,W
00AE:  MOVWF  29
00AF:  MOVF   24,W
00B0:  MOVWF  28
....................       } 
00B1:  GOTO   075
....................  
....................       //TODO: User Code 
....................    } 
....................  
.................... } 
00B2:  SLEEP

Configuration Fuses:
   Word  1: 3F32   HS NOWDT PUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
